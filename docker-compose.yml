version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: projeto-pbl-backend
    # No ports exposed - nginx handles external traffic
    environment:
      - NODE_ENV=production
      - PORT=6719
      - PYTHONUNBUFFERED=1  # Ensure Python output is not buffered
      - PYTHONIOENCODING=utf-8  # Set proper encoding for Python output
      - GIT_DISCOVERY_ACROSS_FILESYSTEM=1  # Allow git to work across filesystem boundaries
    env_file:
      - backend/.env
    volumes:
      # Mount the entire repository for git operations (includes .git automatically)
      - .:/app:rw  # Make the mount read-write
      # Override dist with Docker volume to maintain permissions
      - dist_data:/app/backend/dist
      # Use Docker volume for logs to maintain proper permissions
      - logs_data:/app/backend/logs
      # Python local packages directory
      - python_local:/app/.local
      # Mount node_modules as volume to avoid permission issues and improve performance
      - node_modules_data:/app/backend/node_modules
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        mode: "non-blocking"
        max-buffer-size: "8m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6719/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - projeto-pbl-network

  nginx:
    image: nginx:alpine
    container_name: projeto-pbl-nginx
    ports:
      - "6719:6719"   # Backend HTTP (main port)
      - "4503:4503"   # Additional port if needed
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount SSL certificates
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        mode: "non-blocking"
        max-buffer-size: "8m"
    networks:
      - projeto-pbl-network
    command: ["nginx", "-g", "daemon off;"]

networks:
  projeto-pbl-network:
    driver: bridge

volumes:
  logs_data:
    driver: local
  dist_data:
    driver: local
  python_local:
    driver: local
  node_modules_data:
    driver: local 