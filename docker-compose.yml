version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: projeto-pbl-backend
    # No ports exposed - nginx handles external traffic
    environment:
      - NODE_ENV=production
      - PORT=4502
      - PYTHONUNBUFFERED=1  # Ensure Python output is not buffered
      - PYTHONIOENCODING=utf-8  # Set proper encoding for Python output
      - GIT_DISCOVERY_ACROSS_FILESYSTEM=1  # Allow git to work across filesystem boundaries
    env_file:
      - backend/.env
    volumes:
      # Mount the entire repository for git operations (includes .git automatically)
      - .:/app:rw  # Make the mount read-write
      # Override dist with Docker volume to maintain permissions
      - dist_data:/app/backend/dist
      # Use Docker volume for logs to maintain proper permissions
      - logs_data:/app/backend/logs
      # Python local packages directory
      - python_local:/app/.local
      # Mount node_modules as volume to avoid permission issues and improve performance
      - node_modules_data:/app/backend/node_modules
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4502/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - projeto-pbl-network

  nginx:
    image: nginx:alpine
    container_name: projeto-pbl-nginx
    ports:
      - "4502:4502"   # Backend HTTPS (main port)
      - "4503:4503"   # Additional port if needed
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
    networks:
      - projeto-pbl-network
    command: >
      sh -c "
        echo 'Checking SSL certificate files...' &&
        if [ -f /etc/letsencrypt/live/no-fluxo-api.shop/fullchain.pem ] && [ -f /etc/letsencrypt/live/no-fluxo-api.shop/privkey.pem ]; then
          echo 'SSL certificates found, testing readability...' &&
          cat /etc/letsencrypt/live/no-fluxo-api.shop/fullchain.pem | head -5 &&
          cat /etc/letsencrypt/live/no-fluxo-api.shop/privkey.pem | head -5 &&
          echo 'Testing nginx configuration with SSL...' &&
          nginx -t &&
          echo 'SSL certificates validated, starting nginx with HTTPS termination...' &&
          nginx -g 'daemon off;'
        else
          echo 'SSL certificates not found, creating HTTP-only configuration...' &&
          sed -i 's/listen 4502 ssl http2;/listen 4502;/' /etc/nginx/nginx.conf &&
          sed -i '/ssl_certificate/d' /etc/nginx/nginx.conf &&
          sed -i '/ssl_certificate_key/d' /etc/nginx/nginx.conf &&
          sed -i '/ssl_protocols/d' /etc/nginx/nginx.conf &&
          sed -i '/ssl_ciphers/d' /etc/nginx/nginx.conf &&
          sed -i '/ssl_prefer_server_ciphers/d' /etc/nginx/nginx.conf &&
          sed -i '/ssl_session_cache/d' /etc/nginx/nginx.conf &&
          sed -i '/ssl_session_timeout/d' /etc/nginx/nginx.conf &&
          sed -i '/add_header Strict-Transport-Security/d' /etc/nginx/nginx.conf &&
          sed -i '/add_header X-Frame-Options/d' /etc/nginx/nginx.conf &&
          sed -i '/add_header X-Content-Type-Options/d' /etc/nginx/nginx.conf &&
          sed -i '/add_header X-XSS-Protection/d' /etc/nginx/nginx.conf &&
          echo 'Testing nginx configuration without SSL...' &&
          nginx -t &&
          echo 'Starting nginx with HTTP only (no SSL termination)...' &&
          nginx -g 'daemon off;'
        fi
      "

networks:
  projeto-pbl-network:
    driver: bridge

volumes:
  logs_data:
    driver: local
  dist_data:
    driver: local
  python_local:
    driver: local
  node_modules_data:
    driver: local 